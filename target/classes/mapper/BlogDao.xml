<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gy.dao.BlogDao">

    <resultMap id="User" type="com.gy.entity.User">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="username" column="username"/>
        <result property="email" column="email"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <resultMap id="blog" type="com.gy.queryvo.BlogQuery">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="updateTime" column="update_time"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="typeId" column="type_id"/>
        <association property="type" javaType="Type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>

    <!--新增保存文章-->
    <insert id="saveBlog" parameterType="com.gy.entity.Blog">
        insert into t_blog (id,title, content, first_picture, flag,
        views, comment_count, appreciation, share_statement, commentabled, published,
        recommend, create_time, update_time, type_id, user_id, description)
        values (#{id},#{title},#{content},#{firstPicture},#{flag},#{views},#{commentCount},#{appreciation},
        #{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},
        #{updateTime},#{typeId},#{userId},#{description});
    </insert>

    <!--查询所有文章-->
    <select id="getAllBlog" resultType="com.gy.entity.Blog">
        select * from t_blog
    </select>

    <!--查询文章管理列表-->
    <select id="getAllBlogQuery" resultMap="blog">
        select
        b.id,
        b.title,
        b.update_time,
        b.recommend,
        b.published,
        b.type_id,
        t.id,
        t.name from t_blog b join
        t_type t on b.type_id = t.id order by b.update_time desc
    </select>

    <!--删除文章-->
    <delete id="deleteBlog">
        delete from t_blog where id = #{id}
    </delete>


    <resultMap id="showblog" type="com.gy.queryvo.ShowBlog">
        <id property="id" column="id"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="typeId" column="type_id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="description" column="description"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="commentabled" column="commentabled"/>
        <result property="updateTime" column="update_time"/>
        <result property="pay" column="pay"></result>
    </resultMap>

    <!--查询编辑修改文章-->
    <select id="getBlogById" resultMap="showblog" >
        select
        b.id,
        b.flag,
        b.title,
        b.content,
        b.type_id,
        b.first_picture,
        b.description,
        b.recommend,
        b.published,
        b.share_statement,
        b.appreciation,
        b.commentabled,
        b.pay
        from t_blog b
        where  b.id = #{id};
    </select>

    <!--编辑修改文章-->
    <update id="updateBlog" parameterType="com.gy.queryvo.ShowBlog">
        update t_blog set
        published=#{published},
        flag=#{flag} ,
        title=#{title},
        content=#{content},
        type_id=#{typeId},
        first_picture=#{firstPicture},
        description=#{description},
        recommend=#{recommend},
        share_statement=#{shareStatement},
        appreciation=#{appreciation},
        commentabled=#{commentabled},
        update_time=#{updateTime},
        pay=#{pay}
        where id=#{id};
    </update>


    <select id="searchByTitleOrTypeOrRecommend" parameterType="com.gy.queryvo.SearchBlog" resultMap="blog">
        <bind name="pattern" value="'%' + title + '%'" />
        select
        b.id,
        b.title,
        t.name,
        b.recommend,
        b.published,
        b.update_time,
        b.type_id,
        t.id
        from t_blog b
        join t_type t
        on b.type_id = t.id
        <where>
            <if test="typeId != null">
                and b.type_id = #{typeId}
            </if>
            <if test="title != null">
                and b.title like #{pattern}
            </if>
        </where>
    </select>

    <resultMap id="firstPageBlog" type="com.gy.queryvo.FirstPageBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>

        <result property="typeName" column="name"/>

        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <select id="getFirstPageBlog" resultMap="firstPageBlog">
        select
        b.id,
        b.title,
        b.first_picture,
        b.views,
        b.comment_count,
        b.update_time,
        b.description,
        t.name,
        u.nickname,
        u.avatar
        from t_blog b,t_type t,t_user u
        where b.type_id = t.id and u.id = b.user_id and b.pay = false
        order by b.update_time desc
    </select>

    <select id="getVipBlog" resultMap="firstPageBlog">
        select
        b.id,
        b.title,
        b.first_picture,
        b.views,
        b.comment_count,
        b.update_time,
        b.description,
        t.name,
        u.nickname,
        u.avatar
        from t_blog b,t_type t,t_user u
        where b.type_id = t.id and u.id = b.user_id and b.pay = true
        order by b.update_time desc
    </select>

    <resultMap id="recommendBlog" type="com.gy.queryvo.RecommendBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="recommend" column="recommend"/>
        <result property="firstPicture" column="first_picture"/>
    </resultMap>

    <!--最新推荐文章-->
    <select id="getAllRecommendBlog" resultMap="recommendBlog">
        select * from t_blog where recommend=true order by update_time desc
        limit 6
    </select>

<!--    最新文章-->
<!--    <select id="getNewBlog" resultMap="firstPageBlog">-->
<!--        select * from t_blog order by t_blog.update_time desc limit 3;-->
<!--    </select>-->

    <!--搜索文章-->
    <select id="getSearchBlog" resultMap="firstPageBlog">
        <bind name="pattern" value="'%' + query + '%'" />
        select
        b.id,
        b.title,
        b.first_picture,
        b.views,
        b.comment_count,
        b.update_time,
        b.description,
        t.name,
        u.nickname,
        u.avatar
        from t_blog b, t_type t,t_user u
        where b.type_id = t.id and  u.id = b.user_id and (b.title like #{pattern} or b.content like  #{pattern})
        order by b.update_time desc
    </select>


    <resultMap id="detailedBlog" type="com.gy.queryvo.DetailedBlog">
        <id property="id" column="id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="typeName" column="name"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="commentabled" column="commentabled"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <!--博客详情查询-->
    <select id="getDetailedBlog" resultMap="detailedBlog">
        select
        b.id,
        b.first_picture,
        b.flag,
        b.title,
        b.content,
        b.views,
        b.comment_count,
        b.update_time,
        b.commentabled,
        b.share_statement,
        b.appreciation,
        u.nickname,
        u.avatar,
        t.name
        from t_blog b,t_user u,t_type t
        where b.user_id = u.id and b.type_id = t.id and b.id = #{id}
    </select>

    <!--文章访问自增-->
    <update id="updateViews" parameterType="com.gy.entity.Blog">
        update t_blog b set b.views = b.views+1 where b.id = #{id}
    </update>

    <!--查询出文章评论数量并更新-->
    <update id="getCommentCountById" parameterType="Blog">
        update t_blog b set b.comment_count = (
        select count(*) from t_comment c where c.blog_id = #{id}
        ) WHERE b.id = #{id}
    </update>

    <!--分类页面查询-->
    <select id="getByTypeId" resultMap="firstPageBlog">
        select
        b.id,
        b.title,
        b.first_picture,
        b.views,
        b.comment_count,
        b.update_time,
        b.description,
        t.name,
        u.nickname,
        u.avatar
        from t_blog b, t_type t,t_user u
        where b.type_id = t.id
        and u.id = b.user_id
        and b.type_id = #{typeId}
        order by b.update_time desc
    </select>

    <!--统计博客信息-->
    <select id="getBlogTotal" resultType="Integer">
        select count(*) from t_blog
    </select>
    <select id="getBlogViewTotal" resultType="Integer">
        select sum(views) from t_blog
    </select>
    <select id="getBlogCommentTotal" resultType="Integer">
        select count(*) from t_comment
    </select>
    <select id="getBlogMessageTotal" resultType="Integer">
        select count(*) from t_message
    </select>
</mapper>
